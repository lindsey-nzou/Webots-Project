#include <webots/robot.h>
#include <webots/distance_sensor.h>
#include <webots/motor.h>
#include <stdio.h>

#define TIME_STEP 64  // Time step for simulation in ms
#define MAX_SPEED 6.28

int main(int argc, char **argv) {
  // Initialize the Webots API
  wb_robot_init();
  
  // Define and enable the motors
  WbDeviceTag left_motor = wb_robot_get_device("left wheel motor");
  WbDeviceTag right_motor = wb_robot_get_device("right wheel motor");
  
  wb_motor_set_position(left_motor, INFINITY);
  wb_motor_set_position(right_motor, INFINITY);
  wb_motor_set_velocity(left_motor, 0.0);
  wb_motor_set_velocity(right_motor, 0.0);
  
  double left_speed = MAX_SPEED;
  double right_speed = MAX_SPEED;
  // Initialize light sensors
  // Define and enable the light sensor (lts)
  WbDeviceTag distance_sensors[8];
  char dist_sensor_name[50];

  for (int i = 0; i < 8; i++) {
   sprintf(dist_sensor_name, "ps%d", i);
   distance_sensors[i] = wb_robot_get_device(dist_sensor_name);
   wb_distance_sensor_enable(distance_sensors[i], TIME_STEP);
  }


  // Main loop
  while (wb_robot_step(TIME_STEP) != -1) {

    
    // Read light sensor values
    bool left_wall = wb_distance_sensor_get_value(distance_sensors[5]) > 80;
    bool left_corner = wb_distance_sensor_get_value(distance_sensors[6]) > 80;
    bool front_wall = wb_distance_sensor_get_value(distance_sensors[7]) > 80;
    
    // Left-hand wall-following logic
    
    if (front_wall == true)
    {
      left_speed = MAX_SPEED;
      right_speed = -MAX_SPEED;
    }
     else{
       if (left_wall == true)
       {
         left_speed = MAX_SPEED;
         right_speed = -MAX_SPEED / 1.25;
       }
        
        else if (left_corner == true)
        {
          left_speed = MAX_SPEED;
          right_speed = MAX_SPEED / 16;

        }
        else
        {
          left_speed = MAX_SPEED/8;
          right_speed = MAX_SPEED;
        }
     }
     
        
    
     
  // Set motor speeds
    wb_motor_set_velocity(left_motor, left_speed);
    wb_motor_set_velocity(right_motor, right_speed);
  }

  // Cleanup the Webots API
  wb_robot_cleanup();

  return 0;
}
